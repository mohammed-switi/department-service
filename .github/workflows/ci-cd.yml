name: CI/CD Pipeline

on:
  push:
    branches:
      - develop
      - staging
      - main
  pull_request:
    branches:
      - develop
      - staging
      - main

jobs:
  build-and-test:
    name: Build & Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '21'

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-m2-

      - name: Build with Maven
        run: mvn clean package --batch-mode

      - name: Run tests
        run: mvn test --batch-mode

      - name: Static analysis (Checkstyle)
        run: mvn checkstyle:check

  docker-build-push:
    name: Build & Push Docker Image
    needs: build-and-test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region:            ${{ secrets.AWS_REGION }}

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag & push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: |
            398453103114.dkr.ecr.us-east-1.amazonaws.com/department_service:${{ github.sha }}
            398453103114.dkr.ecr.us-east-1.amazonaws.com/department_service:latest

  deploy:
    name: Deploy to ECS
    needs: docker-build-push
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region:            ${{ secrets.AWS_REGION }}

      - name: Deploy to the right ECS service
        run: |
          # Determine environment from branch name
          ref=${GITHUB_REF##*/}
          if [ "$ref" = "main" ]; then
            envname=prod
          elif [ "$ref" = "staging" ]; then
            envname=staging
          else
            envname=dev
          fi

          # Construct cluster & service names
          cluster=department-cluster-$envname
          service=department-service-$envname

          echo "Deploying to $cluster / $service"
          aws ecs update-service \
            --cluster "$cluster" \
            --service "$service" \
            --force-new-deployment
